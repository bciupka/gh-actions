name: Repository Template Initializer

on:
  create:
    types: [repository]

jobs:
  configure-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Check Repository Name and Initialize from Template
        env:
          GH_TOKEN: ${{ secrets.REPO_CREATION_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Mapowanie prefixów do template repositories
          declare -A TEMPLATES=(
            ["web-"]="your-org/web-template"
            ["mobile-"]="your-org/mobile-template"
            ["backend-"]="your-org/backend-template"
          )

          # Sprawdzenie prefixu i wybórTemplate
          TEMPLATE=""
          for prefix in "${!TEMPLATES[@]}"; do
            if [[ "$REPO_NAME" == "$prefix"* ]]; then
              TEMPLATE="${TEMPLATES[$prefix]}"
              break
            fi
          done

          # Jeśli znaleziono matching template
          if [[ -n "$TEMPLATE" ]]; then
            # Sklonuj template do nowego repo
            gh repo edit $REPO_NAME --template $TEMPLATE

            # Konfiguracja branch protection
            gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository_owner }}/$REPO_NAME/branches/main/protection \
              -f required_status_checks='{"strict": true, "contexts": ["ci/checks"]}' \
              -f enforce_admins=true \
              -f required_pull_request_reviews='{"required_approving_review_count": 1}' \
              -f restrictions=null \
              -f required_linear_history=true

            echo "Repository initialized from template: $TEMPLATE"
          else
            echo "No matching template found for repository: $REPO_NAME"
          fi
